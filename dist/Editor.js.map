{"version":3,"sources":["../src/Editor.js"],"names":["fromTextArea","converter","Editor","elem","wrapper","document","createElement","className","previewButton","innerText","textContent","addEventListener","e","preventDefault","stopPropagation","classList","toggle","appendChild","preview","parentNode","replaceChild","editor","mode","lineNumbers","matchBrackets","lineWrapping","theme","extraKeys","Enter","on","update","getValue","value","markdown","innerHTML","makeHtml","textarea"],"mappings":";;;;;;;;kBAuDwBA,Y;;AAvDxB;;AACA;;AACA;;AAEA;;;;AACA;;AACA;;AAEA;;;;;;AACA,IAAMC,YAAY,yBAAlB;;IAGMC,M;AACF,oBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd,aAAKC,OAAL,GAAeC,SAASC,aAAT,CAAuB,KAAvB,CAAf;AACA,aAAKF,OAAL,CAAaG,SAAb,GAAyB,iBAAzB;;AAEA,aAAKC,aAAL,GAAqBH,SAASC,aAAT,CAAuB,GAAvB,CAArB;AACA,aAAKE,aAAL,CAAmBD,SAAnB,GAA+B,gCAA/B;AACA,aAAKC,aAAL,CAAmBC,SAAnB,GAA+B,KAAKD,aAAL,CAAmBE,WAAnB,GAAiC,gBAAhE;AACA,aAAKF,aAAL,CAAmBG,gBAAnB,CAAoC,OAApC,EAA6C,aAAK;AAC9CC,cAAEC,cAAF;AACAD,cAAEE,eAAF;;AAEA,kBAAKV,OAAL,CAAaW,SAAb,CAAuBC,MAAvB,CAA8B,YAA9B;AACH,SALD;AAMA,aAAKZ,OAAL,CAAaa,WAAb,CAAyB,KAAKT,aAA9B;;AAEA,aAAKU,OAAL,GAAeb,SAASC,aAAT,CAAuB,KAAvB,CAAf;AACA,aAAKY,OAAL,CAAaX,SAAb,GAAyB,yBAAzB;AACA,aAAKH,OAAL,CAAaa,WAAb,CAAyB,KAAKC,OAA9B;;AAEA,aAAKf,IAAL,GAAYA,IAAZ;AACA,aAAKA,IAAL,CAAUgB,UAAV,CAAqBC,YAArB,CAAkC,KAAKhB,OAAvC,EAAgD,KAAKD,IAArD;AACA,aAAKC,OAAL,CAAaa,WAAb,CAAyB,KAAKd,IAA9B;;AAEA,aAAKkB,MAAL,GAAc,qBAAGrB,YAAH,CAAgBG,IAAhB,EAAsB;AAChCmB,kBAAM,UAD0B;AAEhCC,yBAAa,KAFmB;AAGhCC,2BAAe,IAHiB;AAIhCC,0BAAc,IAJkB;AAKhCC,mBAAO,cALyB;AAMhCC,uBAAW,EAACC,OAAO,sCAAR;AANqB,SAAtB,CAAd;;AASA,aAAKP,MAAL,CAAYQ,EAAZ,CAAe,QAAf,EAAyB;AAAA,mBAAK,MAAKC,MAAL,CAAYlB,EAAEmB,QAAF,EAAZ,CAAL;AAAA,SAAzB;AACA,aAAKD,MAAL,CAAY,KAAK3B,IAAL,CAAU6B,KAAtB;AACH;;;;+BAEMC,Q,EAAU;AACb,iBAAKf,OAAL,CAAagB,SAAb,GAAyBjC,UAAUkC,QAAV,CAAmBF,QAAnB,CAAzB;AACH;;;;;;AAIU,SAASjC,YAAT,CAAsBoC,QAAtB,EAAgC;AAC3C,WAAO,IAAIlC,MAAJ,CAAWkC,QAAX,CAAP;AACH","file":"Editor.js","sourcesContent":["import './css/base.css';\nimport './css/base16-light.css';\nimport './css/codemirror.css';\n\nimport cm from 'codemirror';\nimport 'codemirror/mode/markdown/markdown';\nimport './vendor/continuelist';\n\nimport {Converter} from 'showdown';\nconst converter = new Converter();\n\n\nclass Editor {\n    constructor(elem) {\n        this.wrapper = document.createElement('div');\n        this.wrapper.className = 'markdown-editor';\n\n        this.previewButton = document.createElement('a');\n        this.previewButton.className = 'markdown-editor-preview-toggle';\n        this.previewButton.innerText = this.previewButton.textContent = 'Toggle Preview';\n        this.previewButton.addEventListener('click', e => {\n            e.preventDefault();\n            e.stopPropagation();\n\n            this.wrapper.classList.toggle('previewing');\n        });\n        this.wrapper.appendChild(this.previewButton);\n\n        this.preview = document.createElement('div');\n        this.preview.className = 'markdown-editor-preview';\n        this.wrapper.appendChild(this.preview);\n\n        this.elem = elem;\n        this.elem.parentNode.replaceChild(this.wrapper, this.elem);\n        this.wrapper.appendChild(this.elem);\n\n        this.editor = cm.fromTextArea(elem, {\n            mode: 'markdown',\n            lineNumbers: false,\n            matchBrackets: true,\n            lineWrapping: true,\n            theme: 'base16-light',\n            extraKeys: {Enter: 'newlineAndIndentContinueMarkdownList'},\n        });\n\n        this.editor.on('change', e => this.update(e.getValue()));\n        this.update(this.elem.value);\n    }\n\n    update(markdown) {\n        this.preview.innerHTML = converter.makeHtml(markdown);\n    }\n}\n\n\nexport default function fromTextArea(textarea) {\n    return new Editor(textarea);\n};\n"]}